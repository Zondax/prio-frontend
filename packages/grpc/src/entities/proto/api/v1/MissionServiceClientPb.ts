/**
 * @fileoverview gRPC-Web generated client stub for proto.api.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: proto/api/v1/mission.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as proto_api_v1_mission_pb from '../../../proto/api/v1/mission_pb'; // proto import: "proto/api/v1/mission.proto"


export class MissionServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateMission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/CreateMission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.CreateMissionRequest,
    proto_api_v1_mission_pb.CreateMissionResponse,
    (request: proto_api_v1_mission_pb.CreateMissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.CreateMissionResponse.deserializeBinary
  );

  createMission(
    request: proto_api_v1_mission_pb.CreateMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.CreateMissionResponse>;

  createMission(
    request: proto_api_v1_mission_pb.CreateMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.CreateMissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.CreateMissionResponse>;

  createMission(
    request: proto_api_v1_mission_pb.CreateMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.CreateMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/CreateMission',
        request,
        metadata || {},
        this.methodDescriptorCreateMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/CreateMission',
    request,
    metadata || {},
    this.methodDescriptorCreateMission);
  }

  methodDescriptorGetMission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/GetMission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.GetMissionRequest,
    proto_api_v1_mission_pb.GetMissionResponse,
    (request: proto_api_v1_mission_pb.GetMissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.GetMissionResponse.deserializeBinary
  );

  getMission(
    request: proto_api_v1_mission_pb.GetMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.GetMissionResponse>;

  getMission(
    request: proto_api_v1_mission_pb.GetMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.GetMissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.GetMissionResponse>;

  getMission(
    request: proto_api_v1_mission_pb.GetMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.GetMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/GetMission',
        request,
        metadata || {},
        this.methodDescriptorGetMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/GetMission',
    request,
    metadata || {},
    this.methodDescriptorGetMission);
  }

  methodDescriptorUpdateMission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/UpdateMission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.UpdateMissionRequest,
    proto_api_v1_mission_pb.UpdateMissionResponse,
    (request: proto_api_v1_mission_pb.UpdateMissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.UpdateMissionResponse.deserializeBinary
  );

  updateMission(
    request: proto_api_v1_mission_pb.UpdateMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.UpdateMissionResponse>;

  updateMission(
    request: proto_api_v1_mission_pb.UpdateMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.UpdateMissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.UpdateMissionResponse>;

  updateMission(
    request: proto_api_v1_mission_pb.UpdateMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.UpdateMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/UpdateMission',
        request,
        metadata || {},
        this.methodDescriptorUpdateMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/UpdateMission',
    request,
    metadata || {},
    this.methodDescriptorUpdateMission);
  }

  methodDescriptorDeleteMission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/DeleteMission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.DeleteMissionRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_api_v1_mission_pb.DeleteMissionRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteMission(
    request: proto_api_v1_mission_pb.DeleteMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteMission(
    request: proto_api_v1_mission_pb.DeleteMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteMission(
    request: proto_api_v1_mission_pb.DeleteMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/DeleteMission',
        request,
        metadata || {},
        this.methodDescriptorDeleteMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/DeleteMission',
    request,
    metadata || {},
    this.methodDescriptorDeleteMission);
  }

  methodDescriptorSearchMissions = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/SearchMissions',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.SearchMissionsRequest,
    proto_api_v1_mission_pb.SearchMissionsResponse,
    (request: proto_api_v1_mission_pb.SearchMissionsRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.SearchMissionsResponse.deserializeBinary
  );

  searchMissions(
    request: proto_api_v1_mission_pb.SearchMissionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.SearchMissionsResponse>;

  searchMissions(
    request: proto_api_v1_mission_pb.SearchMissionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.SearchMissionsResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.SearchMissionsResponse>;

  searchMissions(
    request: proto_api_v1_mission_pb.SearchMissionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.SearchMissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/SearchMissions',
        request,
        metadata || {},
        this.methodDescriptorSearchMissions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/SearchMissions',
    request,
    metadata || {},
    this.methodDescriptorSearchMissions);
  }

  methodDescriptorSearchMissionMembers = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/SearchMissionMembers',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.SearchMissionMembersRequest,
    proto_api_v1_mission_pb.SearchMissionMembersResponse,
    (request: proto_api_v1_mission_pb.SearchMissionMembersRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.SearchMissionMembersResponse.deserializeBinary
  );

  searchMissionMembers(
    request: proto_api_v1_mission_pb.SearchMissionMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.SearchMissionMembersResponse>;

  searchMissionMembers(
    request: proto_api_v1_mission_pb.SearchMissionMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.SearchMissionMembersResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.SearchMissionMembersResponse>;

  searchMissionMembers(
    request: proto_api_v1_mission_pb.SearchMissionMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.SearchMissionMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/SearchMissionMembers',
        request,
        metadata || {},
        this.methodDescriptorSearchMissionMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/SearchMissionMembers',
    request,
    metadata || {},
    this.methodDescriptorSearchMissionMembers);
  }

  methodDescriptorAddMissionMember = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/AddMissionMember',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.AddMissionMemberRequest,
    proto_api_v1_mission_pb.AddMissionMemberResponse,
    (request: proto_api_v1_mission_pb.AddMissionMemberRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.AddMissionMemberResponse.deserializeBinary
  );

  addMissionMember(
    request: proto_api_v1_mission_pb.AddMissionMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.AddMissionMemberResponse>;

  addMissionMember(
    request: proto_api_v1_mission_pb.AddMissionMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.AddMissionMemberResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.AddMissionMemberResponse>;

  addMissionMember(
    request: proto_api_v1_mission_pb.AddMissionMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.AddMissionMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/AddMissionMember',
        request,
        metadata || {},
        this.methodDescriptorAddMissionMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/AddMissionMember',
    request,
    metadata || {},
    this.methodDescriptorAddMissionMember);
  }

  methodDescriptorUpdateMissionMemberRole = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/UpdateMissionMemberRole',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.UpdateMissionMemberRoleRequest,
    proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse,
    (request: proto_api_v1_mission_pb.UpdateMissionMemberRoleRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse.deserializeBinary
  );

  updateMissionMemberRole(
    request: proto_api_v1_mission_pb.UpdateMissionMemberRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse>;

  updateMissionMemberRole(
    request: proto_api_v1_mission_pb.UpdateMissionMemberRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse>;

  updateMissionMemberRole(
    request: proto_api_v1_mission_pb.UpdateMissionMemberRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.UpdateMissionMemberRoleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/UpdateMissionMemberRole',
        request,
        metadata || {},
        this.methodDescriptorUpdateMissionMemberRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/UpdateMissionMemberRole',
    request,
    metadata || {},
    this.methodDescriptorUpdateMissionMemberRole);
  }

  methodDescriptorRemoveMissionMember = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/RemoveMissionMember',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.RemoveMissionMemberRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_api_v1_mission_pb.RemoveMissionMemberRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  removeMissionMember(
    request: proto_api_v1_mission_pb.RemoveMissionMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  removeMissionMember(
    request: proto_api_v1_mission_pb.RemoveMissionMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  removeMissionMember(
    request: proto_api_v1_mission_pb.RemoveMissionMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/RemoveMissionMember',
        request,
        metadata || {},
        this.methodDescriptorRemoveMissionMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/RemoveMissionMember',
    request,
    metadata || {},
    this.methodDescriptorRemoveMissionMember);
  }

  methodDescriptorCanAccessMission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.MissionService/CanAccessMission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_mission_pb.CanAccessMissionRequest,
    proto_api_v1_mission_pb.CanAccessMissionResponse,
    (request: proto_api_v1_mission_pb.CanAccessMissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_mission_pb.CanAccessMissionResponse.deserializeBinary
  );

  canAccessMission(
    request: proto_api_v1_mission_pb.CanAccessMissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_mission_pb.CanAccessMissionResponse>;

  canAccessMission(
    request: proto_api_v1_mission_pb.CanAccessMissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.CanAccessMissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_mission_pb.CanAccessMissionResponse>;

  canAccessMission(
    request: proto_api_v1_mission_pb.CanAccessMissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_mission_pb.CanAccessMissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.MissionService/CanAccessMission',
        request,
        metadata || {},
        this.methodDescriptorCanAccessMission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.MissionService/CanAccessMission',
    request,
    metadata || {},
    this.methodDescriptorCanAccessMission);
  }

}

