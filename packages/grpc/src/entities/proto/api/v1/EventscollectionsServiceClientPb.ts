/**
 * @fileoverview gRPC-Web generated client stub for proto.api.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: proto/api/v1/eventscollections.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_api_v1_eventscollections_pb from '../../../proto/api/v1/eventscollections_pb'; // proto import: "proto/api/v1/eventscollections.proto"


export class EventCollectionServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetEventCollections = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/GetEventCollections',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.GetEventCollectionsRequest,
    proto_api_v1_eventscollections_pb.GetEventCollectionsResponse,
    (request: proto_api_v1_eventscollections_pb.GetEventCollectionsRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.GetEventCollectionsResponse.deserializeBinary
  );

  getEventCollections(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.GetEventCollectionsResponse>;

  getEventCollections(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.GetEventCollectionsResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.GetEventCollectionsResponse>;

  getEventCollections(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.GetEventCollectionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/GetEventCollections',
        request,
        metadata || {},
        this.methodDescriptorGetEventCollections,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/GetEventCollections',
    request,
    metadata || {},
    this.methodDescriptorGetEventCollections);
  }

  methodDescriptorCreateEventCollection = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/CreateEventCollection',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.CreateEventCollectionRequest,
    proto_api_v1_eventscollections_pb.CreateEventCollectionResponse,
    (request: proto_api_v1_eventscollections_pb.CreateEventCollectionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.CreateEventCollectionResponse.deserializeBinary
  );

  createEventCollection(
    request: proto_api_v1_eventscollections_pb.CreateEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.CreateEventCollectionResponse>;

  createEventCollection(
    request: proto_api_v1_eventscollections_pb.CreateEventCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.CreateEventCollectionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.CreateEventCollectionResponse>;

  createEventCollection(
    request: proto_api_v1_eventscollections_pb.CreateEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.CreateEventCollectionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/CreateEventCollection',
        request,
        metadata || {},
        this.methodDescriptorCreateEventCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/CreateEventCollection',
    request,
    metadata || {},
    this.methodDescriptorCreateEventCollection);
  }

  methodDescriptorUpdateEventCollection = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/UpdateEventCollection',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.UpdateEventCollectionRequest,
    proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse,
    (request: proto_api_v1_eventscollections_pb.UpdateEventCollectionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse.deserializeBinary
  );

  updateEventCollection(
    request: proto_api_v1_eventscollections_pb.UpdateEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse>;

  updateEventCollection(
    request: proto_api_v1_eventscollections_pb.UpdateEventCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse>;

  updateEventCollection(
    request: proto_api_v1_eventscollections_pb.UpdateEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.UpdateEventCollectionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/UpdateEventCollection',
        request,
        metadata || {},
        this.methodDescriptorUpdateEventCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/UpdateEventCollection',
    request,
    metadata || {},
    this.methodDescriptorUpdateEventCollection);
  }

  methodDescriptorDeleteEventCollection = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/DeleteEventCollection',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.DeleteEventCollectionRequest,
    proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse,
    (request: proto_api_v1_eventscollections_pb.DeleteEventCollectionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse.deserializeBinary
  );

  deleteEventCollection(
    request: proto_api_v1_eventscollections_pb.DeleteEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse>;

  deleteEventCollection(
    request: proto_api_v1_eventscollections_pb.DeleteEventCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse>;

  deleteEventCollection(
    request: proto_api_v1_eventscollections_pb.DeleteEventCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.DeleteEventCollectionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/DeleteEventCollection',
        request,
        metadata || {},
        this.methodDescriptorDeleteEventCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/DeleteEventCollection',
    request,
    metadata || {},
    this.methodDescriptorDeleteEventCollection);
  }

  methodDescriptorAddEventsToCollection = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/AddEventsToCollection',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.AddEventsToCollectionRequest,
    proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse,
    (request: proto_api_v1_eventscollections_pb.AddEventsToCollectionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse.deserializeBinary
  );

  addEventsToCollection(
    request: proto_api_v1_eventscollections_pb.AddEventsToCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse>;

  addEventsToCollection(
    request: proto_api_v1_eventscollections_pb.AddEventsToCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse>;

  addEventsToCollection(
    request: proto_api_v1_eventscollections_pb.AddEventsToCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.AddEventsToCollectionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/AddEventsToCollection',
        request,
        metadata || {},
        this.methodDescriptorAddEventsToCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/AddEventsToCollection',
    request,
    metadata || {},
    this.methodDescriptorAddEventsToCollection);
  }

  methodDescriptorRemoveEventsFromCollection = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/RemoveEventsFromCollection',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionRequest,
    proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse,
    (request: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse.deserializeBinary
  );

  removeEventsFromCollection(
    request: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse>;

  removeEventsFromCollection(
    request: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse>;

  removeEventsFromCollection(
    request: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.RemoveEventsFromCollectionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/RemoveEventsFromCollection',
        request,
        metadata || {},
        this.methodDescriptorRemoveEventsFromCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/RemoveEventsFromCollection',
    request,
    metadata || {},
    this.methodDescriptorRemoveEventsFromCollection);
  }

  methodDescriptorSetEventCollectionPermission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/SetEventCollectionPermission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.SetEventCollectionPermissionRequest,
    proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse,
    (request: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse.deserializeBinary
  );

  setEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse>;

  setEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse>;

  setEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.SetEventCollectionPermissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/SetEventCollectionPermission',
        request,
        metadata || {},
        this.methodDescriptorSetEventCollectionPermission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/SetEventCollectionPermission',
    request,
    metadata || {},
    this.methodDescriptorSetEventCollectionPermission);
  }

  methodDescriptorRemoveEventCollectionPermission = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/RemoveEventCollectionPermission',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionRequest,
    proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse,
    (request: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse.deserializeBinary
  );

  removeEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse>;

  removeEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse>;

  removeEventCollectionPermission(
    request: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.RemoveEventCollectionPermissionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/RemoveEventCollectionPermission',
        request,
        metadata || {},
        this.methodDescriptorRemoveEventCollectionPermission,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/RemoveEventCollectionPermission',
    request,
    metadata || {},
    this.methodDescriptorRemoveEventCollectionPermission);
  }

  methodDescriptorGetEventCollectionPermissions = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventCollectionService/GetEventCollectionPermissions',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsRequest,
    proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse,
    (request: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse.deserializeBinary
  );

  getEventCollectionPermissions(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse>;

  getEventCollectionPermissions(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse>;

  getEventCollectionPermissions(
    request: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_eventscollections_pb.GetEventCollectionPermissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventCollectionService/GetEventCollectionPermissions',
        request,
        metadata || {},
        this.methodDescriptorGetEventCollectionPermissions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventCollectionService/GetEventCollectionPermissions',
    request,
    metadata || {},
    this.methodDescriptorGetEventCollectionPermissions);
  }

}

