/**
 * @fileoverview gRPC-Web generated client stub for proto.api.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: proto/api/v1/event.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_api_v1_event_pb from '../../../proto/api/v1/event_pb'; // proto import: "proto/api/v1/event.proto"


export class EventServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetEvents = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventService/GetEvents',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_event_pb.GetEventsRequest,
    proto_api_v1_event_pb.GetEventsResponse,
    (request: proto_api_v1_event_pb.GetEventsRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_event_pb.GetEventsResponse.deserializeBinary
  );

  getEvents(
    request: proto_api_v1_event_pb.GetEventsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_event_pb.GetEventsResponse>;

  getEvents(
    request: proto_api_v1_event_pb.GetEventsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventsResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_event_pb.GetEventsResponse>;

  getEvents(
    request: proto_api_v1_event_pb.GetEventsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventService/GetEvents',
        request,
        metadata || {},
        this.methodDescriptorGetEvents,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventService/GetEvents',
    request,
    metadata || {},
    this.methodDescriptorGetEvents);
  }

  methodDescriptorGetEventById = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventService/GetEventById',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_event_pb.GetEventByIdRequest,
    proto_api_v1_event_pb.GetEventByIdResponse,
    (request: proto_api_v1_event_pb.GetEventByIdRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_event_pb.GetEventByIdResponse.deserializeBinary
  );

  getEventById(
    request: proto_api_v1_event_pb.GetEventByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_event_pb.GetEventByIdResponse>;

  getEventById(
    request: proto_api_v1_event_pb.GetEventByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventByIdResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_event_pb.GetEventByIdResponse>;

  getEventById(
    request: proto_api_v1_event_pb.GetEventByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventByIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventService/GetEventById',
        request,
        metadata || {},
        this.methodDescriptorGetEventById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventService/GetEventById',
    request,
    metadata || {},
    this.methodDescriptorGetEventById);
  }

  methodDescriptorGetEventMapMarkers = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventService/GetEventMapMarkers',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_event_pb.GetEventMapMarkersRequest,
    proto_api_v1_event_pb.GetEventMapMarkersResponse,
    (request: proto_api_v1_event_pb.GetEventMapMarkersRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_event_pb.GetEventMapMarkersResponse.deserializeBinary
  );

  getEventMapMarkers(
    request: proto_api_v1_event_pb.GetEventMapMarkersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_event_pb.GetEventMapMarkersResponse>;

  getEventMapMarkers(
    request: proto_api_v1_event_pb.GetEventMapMarkersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventMapMarkersResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_event_pb.GetEventMapMarkersResponse>;

  getEventMapMarkers(
    request: proto_api_v1_event_pb.GetEventMapMarkersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.GetEventMapMarkersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventService/GetEventMapMarkers',
        request,
        metadata || {},
        this.methodDescriptorGetEventMapMarkers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventService/GetEventMapMarkers',
    request,
    metadata || {},
    this.methodDescriptorGetEventMapMarkers);
  }

  methodDescriptorUpsertEventState = new grpcWeb.MethodDescriptor(
    '/proto.api.v1.EventService/UpsertEventState',
    grpcWeb.MethodType.UNARY,
    proto_api_v1_event_pb.UpsertEventStateRequest,
    proto_api_v1_event_pb.UpsertEventStateResponse,
    (request: proto_api_v1_event_pb.UpsertEventStateRequest) => {
      return request.serializeBinary();
    },
    proto_api_v1_event_pb.UpsertEventStateResponse.deserializeBinary
  );

  upsertEventState(
    request: proto_api_v1_event_pb.UpsertEventStateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_api_v1_event_pb.UpsertEventStateResponse>;

  upsertEventState(
    request: proto_api_v1_event_pb.UpsertEventStateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.UpsertEventStateResponse) => void): grpcWeb.ClientReadableStream<proto_api_v1_event_pb.UpsertEventStateResponse>;

  upsertEventState(
    request: proto_api_v1_event_pb.UpsertEventStateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_api_v1_event_pb.UpsertEventStateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.api.v1.EventService/UpsertEventState',
        request,
        metadata || {},
        this.methodDescriptorUpsertEventState,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.api.v1.EventService/UpsertEventState',
    request,
    metadata || {},
    this.methodDescriptorUpsertEventState);
  }

}

