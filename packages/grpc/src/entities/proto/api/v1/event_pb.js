// source: proto/api/v1/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var proto_api_v1_common_pb = require('../../../proto/api/v1/common_pb.js');
goog.object.extend(proto, proto_api_v1_common_pb);
goog.exportSymbol('proto.proto.api.v1.AmbiguousFilterGroup', null, global);
goog.exportSymbol('proto.proto.api.v1.Date', null, global);
goog.exportSymbol('proto.proto.api.v1.Event', null, global);
goog.exportSymbol('proto.proto.api.v1.EventGroup', null, global);
goog.exportSymbol('proto.proto.api.v1.EventKind', null, global);
goog.exportSymbol('proto.proto.api.v1.EventSource', null, global);
goog.exportSymbol('proto.proto.api.v1.EventSourceType', null, global);
goog.exportSymbol('proto.proto.api.v1.FilterTag', null, global);
goog.exportSymbol('proto.proto.api.v1.FilterTagType', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventByIdRequest', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventByIdResponse', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventMapMarkersRequest', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventMapMarkersResponse', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventsRequest', null, global);
goog.exportSymbol('proto.proto.api.v1.GetEventsResponse', null, global);
goog.exportSymbol('proto.proto.api.v1.MapMarker', null, global);
goog.exportSymbol('proto.proto.api.v1.MapMarker.MarkerDataCase', null, global);
goog.exportSymbol('proto.proto.api.v1.MapMarkerKind', null, global);
goog.exportSymbol('proto.proto.api.v1.MarkerEvent', null, global);
goog.exportSymbol('proto.proto.api.v1.NLFilterState', null, global);
goog.exportSymbol('proto.proto.api.v1.UpsertEventStateRequest', null, global);
goog.exportSymbol('proto.proto.api.v1.UpsertEventStateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.Date = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.Date, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.Date.displayName = 'proto.proto.api.v1.Date';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.EventSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.EventSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.EventSource.displayName = 'proto.proto.api.v1.EventSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.Event.displayName = 'proto.proto.api.v1.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.MarkerEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.MarkerEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.MarkerEvent.displayName = 'proto.proto.api.v1.MarkerEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.MapMarker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.api.v1.MapMarker.oneofGroups_);
};
goog.inherits(proto.proto.api.v1.MapMarker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.MapMarker.displayName = 'proto.proto.api.v1.MapMarker';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.EventGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.EventGroup.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.EventGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.EventGroup.displayName = 'proto.proto.api.v1.EventGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.FilterTag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.FilterTag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.FilterTag.displayName = 'proto.proto.api.v1.FilterTag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.AmbiguousFilterGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.AmbiguousFilterGroup.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.AmbiguousFilterGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.AmbiguousFilterGroup.displayName = 'proto.proto.api.v1.AmbiguousFilterGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.NLFilterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.NLFilterState.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.NLFilterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.NLFilterState.displayName = 'proto.proto.api.v1.NLFilterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.GetEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.GetEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventsRequest.displayName = 'proto.proto.api.v1.GetEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.GetEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.GetEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventsResponse.displayName = 'proto.proto.api.v1.GetEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.GetEventByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventByIdRequest.displayName = 'proto.proto.api.v1.GetEventByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.GetEventByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventByIdResponse.displayName = 'proto.proto.api.v1.GetEventByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventMapMarkersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.GetEventMapMarkersRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.GetEventMapMarkersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventMapMarkersRequest.displayName = 'proto.proto.api.v1.GetEventMapMarkersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.GetEventMapMarkersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.api.v1.GetEventMapMarkersResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.api.v1.GetEventMapMarkersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.GetEventMapMarkersResponse.displayName = 'proto.proto.api.v1.GetEventMapMarkersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.UpsertEventStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.UpsertEventStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.UpsertEventStateRequest.displayName = 'proto.proto.api.v1.UpsertEventStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.api.v1.UpsertEventStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.api.v1.UpsertEventStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.api.v1.UpsertEventStateResponse.displayName = 'proto.proto.api.v1.UpsertEventStateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.Date.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.Date.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.Date} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.Date.toObject = function(includeInstance, msg) {
  var f, obj = {
start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
localTimezone: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.Date}
 */
proto.proto.api.v1.Date.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.Date;
  return proto.proto.api.v1.Date.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.Date} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.Date}
 */
proto.proto.api.v1.Date.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalTimezone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.Date.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.Date.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.Date} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.Date.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLocalTimezone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.proto.api.v1.Date.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.proto.api.v1.Date} returns this
*/
proto.proto.api.v1.Date.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Date} returns this
 */
proto.proto.api.v1.Date.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Date.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.proto.api.v1.Date.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.proto.api.v1.Date} returns this
*/
proto.proto.api.v1.Date.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Date} returns this
 */
proto.proto.api.v1.Date.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Date.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string local_timezone = 3;
 * @return {string}
 */
proto.proto.api.v1.Date.prototype.getLocalTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Date} returns this
 */
proto.proto.api.v1.Date.prototype.setLocalTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.EventSource.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.EventSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.EventSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.EventSource.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
baseurl: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, 0),
url: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.EventSource}
 */
proto.proto.api.v1.EventSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.EventSource;
  return proto.proto.api.v1.EventSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.EventSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.EventSource}
 */
proto.proto.api.v1.EventSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseurl(value);
      break;
    case 3:
      var value = /** @type {!proto.proto.api.v1.EventSourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.EventSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.EventSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.EventSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.EventSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.api.v1.EventSource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.EventSource} returns this
 */
proto.proto.api.v1.EventSource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string baseurl = 2;
 * @return {string}
 */
proto.proto.api.v1.EventSource.prototype.getBaseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.EventSource} returns this
 */
proto.proto.api.v1.EventSource.prototype.setBaseurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EventSourceType type = 3;
 * @return {!proto.proto.api.v1.EventSourceType}
 */
proto.proto.api.v1.EventSource.prototype.getType = function() {
  return /** @type {!proto.proto.api.v1.EventSourceType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.proto.api.v1.EventSourceType} value
 * @return {!proto.proto.api.v1.EventSource} returns this
 */
proto.proto.api.v1.EventSource.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.proto.api.v1.EventSource.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.EventSource} returns this
 */
proto.proto.api.v1.EventSource.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, 0),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
kind: jspb.Message.getFieldWithDefault(msg, 3, 0),
source: (f = msg.getSource()) && proto.proto.api.v1.EventSource.toObject(includeInstance, f),
title: jspb.Message.getFieldWithDefault(msg, 5, ""),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
image: jspb.Message.getFieldWithDefault(msg, 7, ""),
date: (f = msg.getDate()) && proto.proto.api.v1.Date.toObject(includeInstance, f),
locationType: jspb.Message.getFieldWithDefault(msg, 9, ""),
location: (f = msg.getLocation()) && proto_api_v1_common_pb.Location.toObject(includeInstance, f),
status: jspb.Message.getFieldWithDefault(msg, 11, 0),
externalId: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.Event}
 */
proto.proto.api.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.Event;
  return proto.proto.api.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.Event}
 */
proto.proto.api.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {!proto.proto.api.v1.EventKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 4:
      var value = new proto.proto.api.v1.EventSource;
      reader.readMessage(value,proto.proto.api.v1.EventSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 8:
      var value = new proto.proto.api.v1.Date;
      reader.readMessage(value,proto.proto.api.v1.Date.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationType(value);
      break;
    case 10:
      var value = new proto_api_v1_common_pb.Location;
      reader.readMessage(value,proto_api_v1_common_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 11:
      var value = /** @type {!proto.proto.api.v1.EventStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.proto.api.v1.EventSource.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.proto.api.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getLocationType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_api_v1_common_pb.Location.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getExternalId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.api.v1.Event.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.proto.api.v1.Event.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.proto.api.v1.Event} returns this
*/
proto.proto.api.v1.Event.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Event.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EventKind kind = 3;
 * @return {!proto.proto.api.v1.EventKind}
 */
proto.proto.api.v1.Event.prototype.getKind = function() {
  return /** @type {!proto.proto.api.v1.EventKind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.proto.api.v1.EventKind} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional EventSource source = 4;
 * @return {?proto.proto.api.v1.EventSource}
 */
proto.proto.api.v1.Event.prototype.getSource = function() {
  return /** @type{?proto.proto.api.v1.EventSource} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.EventSource, 4));
};


/**
 * @param {?proto.proto.api.v1.EventSource|undefined} value
 * @return {!proto.proto.api.v1.Event} returns this
*/
proto.proto.api.v1.Event.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Event.prototype.hasSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.proto.api.v1.Event.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.proto.api.v1.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string image = 7;
 * @return {string}
 */
proto.proto.api.v1.Event.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Date date = 8;
 * @return {?proto.proto.api.v1.Date}
 */
proto.proto.api.v1.Event.prototype.getDate = function() {
  return /** @type{?proto.proto.api.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.Date, 8));
};


/**
 * @param {?proto.proto.api.v1.Date|undefined} value
 * @return {!proto.proto.api.v1.Event} returns this
*/
proto.proto.api.v1.Event.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Event.prototype.hasDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string location_type = 9;
 * @return {string}
 */
proto.proto.api.v1.Event.prototype.getLocationType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setLocationType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Location location = 10;
 * @return {?proto.proto.api.v1.Location}
 */
proto.proto.api.v1.Event.prototype.getLocation = function() {
  return /** @type{?proto.proto.api.v1.Location} */ (
    jspb.Message.getWrapperField(this, proto_api_v1_common_pb.Location, 10));
};


/**
 * @param {?proto.proto.api.v1.Location|undefined} value
 * @return {!proto.proto.api.v1.Event} returns this
*/
proto.proto.api.v1.Event.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.Event.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EventStatus status = 11;
 * @return {!proto.proto.api.v1.EventStatus}
 */
proto.proto.api.v1.Event.prototype.getStatus = function() {
  return /** @type {!proto.proto.api.v1.EventStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.proto.api.v1.EventStatus} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string external_id = 12;
 * @return {string}
 */
proto.proto.api.v1.Event.prototype.getExternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.Event} returns this
 */
proto.proto.api.v1.Event.prototype.setExternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.MarkerEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.MarkerEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.MarkerEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.MarkerEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, 0),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
image: jspb.Message.getFieldWithDefault(msg, 3, ""),
startDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
localTimezone: jspb.Message.getFieldWithDefault(msg, 5, ""),
locationType: jspb.Message.getFieldWithDefault(msg, 6, ""),
location: (f = msg.getLocation()) && proto_api_v1_common_pb.Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.MarkerEvent}
 */
proto.proto.api.v1.MarkerEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.MarkerEvent;
  return proto.proto.api.v1.MarkerEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.MarkerEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.MarkerEvent}
 */
proto.proto.api.v1.MarkerEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalTimezone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationType(value);
      break;
    case 7:
      var value = new proto_api_v1_common_pb.Location;
      reader.readMessage(value,proto_api_v1_common_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.MarkerEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.MarkerEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.MarkerEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.MarkerEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocalTimezone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocationType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_api_v1_common_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.api.v1.MarkerEvent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.proto.api.v1.MarkerEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.proto.api.v1.MarkerEvent.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string start_date = 4;
 * @return {string}
 */
proto.proto.api.v1.MarkerEvent.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string local_timezone = 5;
 * @return {string}
 */
proto.proto.api.v1.MarkerEvent.prototype.getLocalTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setLocalTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string location_type = 6;
 * @return {string}
 */
proto.proto.api.v1.MarkerEvent.prototype.getLocationType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.setLocationType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Location location = 7;
 * @return {?proto.proto.api.v1.Location}
 */
proto.proto.api.v1.MarkerEvent.prototype.getLocation = function() {
  return /** @type{?proto.proto.api.v1.Location} */ (
    jspb.Message.getWrapperField(this, proto_api_v1_common_pb.Location, 7));
};


/**
 * @param {?proto.proto.api.v1.Location|undefined} value
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
*/
proto.proto.api.v1.MarkerEvent.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.MarkerEvent} returns this
 */
proto.proto.api.v1.MarkerEvent.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.MarkerEvent.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.api.v1.MapMarker.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.proto.api.v1.MapMarker.MarkerDataCase = {
  MARKER_DATA_NOT_SET: 0,
  EVENT: 3,
  EVENT_GROUP: 4
};

/**
 * @return {proto.proto.api.v1.MapMarker.MarkerDataCase}
 */
proto.proto.api.v1.MapMarker.prototype.getMarkerDataCase = function() {
  return /** @type {proto.proto.api.v1.MapMarker.MarkerDataCase} */(jspb.Message.computeOneofCase(this, proto.proto.api.v1.MapMarker.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.MapMarker.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.MapMarker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.MapMarker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.MapMarker.toObject = function(includeInstance, msg) {
  var f, obj = {
kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
coordinates: (f = msg.getCoordinates()) && proto_api_v1_common_pb.Coordinates.toObject(includeInstance, f),
event: (f = msg.getEvent()) && proto.proto.api.v1.MarkerEvent.toObject(includeInstance, f),
eventGroup: (f = msg.getEventGroup()) && proto.proto.api.v1.EventGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.MapMarker}
 */
proto.proto.api.v1.MapMarker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.MapMarker;
  return proto.proto.api.v1.MapMarker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.MapMarker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.MapMarker}
 */
proto.proto.api.v1.MapMarker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.api.v1.MapMarkerKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = new proto_api_v1_common_pb.Coordinates;
      reader.readMessage(value,proto_api_v1_common_pb.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 3:
      var value = new proto.proto.api.v1.MarkerEvent;
      reader.readMessage(value,proto.proto.api.v1.MarkerEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 4:
      var value = new proto.proto.api.v1.EventGroup;
      reader.readMessage(value,proto.proto.api.v1.EventGroup.deserializeBinaryFromReader);
      msg.setEventGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.MapMarker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.MapMarker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.MapMarker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.MapMarker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_api_v1_common_pb.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.proto.api.v1.MarkerEvent.serializeBinaryToWriter
    );
  }
  f = message.getEventGroup();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.proto.api.v1.EventGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional MapMarkerKind kind = 1;
 * @return {!proto.proto.api.v1.MapMarkerKind}
 */
proto.proto.api.v1.MapMarker.prototype.getKind = function() {
  return /** @type {!proto.proto.api.v1.MapMarkerKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.api.v1.MapMarkerKind} value
 * @return {!proto.proto.api.v1.MapMarker} returns this
 */
proto.proto.api.v1.MapMarker.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Coordinates coordinates = 2;
 * @return {?proto.proto.api.v1.Coordinates}
 */
proto.proto.api.v1.MapMarker.prototype.getCoordinates = function() {
  return /** @type{?proto.proto.api.v1.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto_api_v1_common_pb.Coordinates, 2));
};


/**
 * @param {?proto.proto.api.v1.Coordinates|undefined} value
 * @return {!proto.proto.api.v1.MapMarker} returns this
*/
proto.proto.api.v1.MapMarker.prototype.setCoordinates = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.MapMarker} returns this
 */
proto.proto.api.v1.MapMarker.prototype.clearCoordinates = function() {
  return this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.MapMarker.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MarkerEvent event = 3;
 * @return {?proto.proto.api.v1.MarkerEvent}
 */
proto.proto.api.v1.MapMarker.prototype.getEvent = function() {
  return /** @type{?proto.proto.api.v1.MarkerEvent} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.MarkerEvent, 3));
};


/**
 * @param {?proto.proto.api.v1.MarkerEvent|undefined} value
 * @return {!proto.proto.api.v1.MapMarker} returns this
*/
proto.proto.api.v1.MapMarker.prototype.setEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.proto.api.v1.MapMarker.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.MapMarker} returns this
 */
proto.proto.api.v1.MapMarker.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.MapMarker.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EventGroup event_group = 4;
 * @return {?proto.proto.api.v1.EventGroup}
 */
proto.proto.api.v1.MapMarker.prototype.getEventGroup = function() {
  return /** @type{?proto.proto.api.v1.EventGroup} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.EventGroup, 4));
};


/**
 * @param {?proto.proto.api.v1.EventGroup|undefined} value
 * @return {!proto.proto.api.v1.MapMarker} returns this
*/
proto.proto.api.v1.MapMarker.prototype.setEventGroup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.proto.api.v1.MapMarker.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.MapMarker} returns this
 */
proto.proto.api.v1.MapMarker.prototype.clearEventGroup = function() {
  return this.setEventGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.MapMarker.prototype.hasEventGroup = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.EventGroup.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.EventGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.EventGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.EventGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.EventGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
eventCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
eventsIncludedList: jspb.Message.toObjectList(msg.getEventsIncludedList(),
    proto.proto.api.v1.MarkerEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.EventGroup}
 */
proto.proto.api.v1.EventGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.EventGroup;
  return proto.proto.api.v1.EventGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.EventGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.EventGroup}
 */
proto.proto.api.v1.EventGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventCount(value);
      break;
    case 2:
      var value = new proto.proto.api.v1.MarkerEvent;
      reader.readMessage(value,proto.proto.api.v1.MarkerEvent.deserializeBinaryFromReader);
      msg.addEventsIncluded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.EventGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.EventGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.EventGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.EventGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEventsIncludedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.api.v1.MarkerEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 event_count = 1;
 * @return {number}
 */
proto.proto.api.v1.EventGroup.prototype.getEventCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.api.v1.EventGroup} returns this
 */
proto.proto.api.v1.EventGroup.prototype.setEventCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated MarkerEvent events_included = 2;
 * @return {!Array<!proto.proto.api.v1.MarkerEvent>}
 */
proto.proto.api.v1.EventGroup.prototype.getEventsIncludedList = function() {
  return /** @type{!Array<!proto.proto.api.v1.MarkerEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.api.v1.MarkerEvent, 2));
};


/**
 * @param {!Array<!proto.proto.api.v1.MarkerEvent>} value
 * @return {!proto.proto.api.v1.EventGroup} returns this
*/
proto.proto.api.v1.EventGroup.prototype.setEventsIncludedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.api.v1.MarkerEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.MarkerEvent}
 */
proto.proto.api.v1.EventGroup.prototype.addEventsIncluded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.api.v1.MarkerEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.EventGroup} returns this
 */
proto.proto.api.v1.EventGroup.prototype.clearEventsIncludedList = function() {
  return this.setEventsIncludedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.FilterTag.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.FilterTag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.FilterTag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.FilterTag.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, 0),
value: jspb.Message.getFieldWithDefault(msg, 2, ""),
displayText: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.FilterTag}
 */
proto.proto.api.v1.FilterTag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.FilterTag;
  return proto.proto.api.v1.FilterTag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.FilterTag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.FilterTag}
 */
proto.proto.api.v1.FilterTag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.api.v1.FilterTagType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.FilterTag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.FilterTag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.FilterTag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.FilterTag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional FilterTagType type = 1;
 * @return {!proto.proto.api.v1.FilterTagType}
 */
proto.proto.api.v1.FilterTag.prototype.getType = function() {
  return /** @type {!proto.proto.api.v1.FilterTagType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.api.v1.FilterTagType} value
 * @return {!proto.proto.api.v1.FilterTag} returns this
 */
proto.proto.api.v1.FilterTag.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.proto.api.v1.FilterTag.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.FilterTag} returns this
 */
proto.proto.api.v1.FilterTag.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_text = 3;
 * @return {string}
 */
proto.proto.api.v1.FilterTag.prototype.getDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.FilterTag} returns this
 */
proto.proto.api.v1.FilterTag.prototype.setDisplayText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.AmbiguousFilterGroup.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.AmbiguousFilterGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.AmbiguousFilterGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.AmbiguousFilterGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
optionsList: jspb.Message.toObjectList(msg.getOptionsList(),
    proto_api_v1_common_pb.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup}
 */
proto.proto.api.v1.AmbiguousFilterGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.AmbiguousFilterGroup;
  return proto.proto.api.v1.AmbiguousFilterGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.AmbiguousFilterGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup}
 */
proto.proto.api.v1.AmbiguousFilterGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.api.v1.FilterKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto_api_v1_common_pb.Filter;
      reader.readMessage(value,proto_api_v1_common_pb.Filter.deserializeBinaryFromReader);
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.AmbiguousFilterGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.AmbiguousFilterGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.AmbiguousFilterGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_api_v1_common_pb.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional FilterKind kind = 1;
 * @return {!proto.proto.api.v1.FilterKind}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.getKind = function() {
  return /** @type {!proto.proto.api.v1.FilterKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.api.v1.FilterKind} value
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup} returns this
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup} returns this
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Filter options = 3;
 * @return {!Array<!proto.proto.api.v1.Filter>}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.getOptionsList = function() {
  return /** @type{!Array<!proto.proto.api.v1.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_api_v1_common_pb.Filter, 3));
};


/**
 * @param {!Array<!proto.proto.api.v1.Filter>} value
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup} returns this
*/
proto.proto.api.v1.AmbiguousFilterGroup.prototype.setOptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.api.v1.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.Filter}
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.addOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.api.v1.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup} returns this
 */
proto.proto.api.v1.AmbiguousFilterGroup.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.NLFilterState.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.NLFilterState.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.NLFilterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.NLFilterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.NLFilterState.toObject = function(includeInstance, msg) {
  var f, obj = {
resolvedFiltersList: jspb.Message.toObjectList(msg.getResolvedFiltersList(),
    proto_api_v1_common_pb.Filter.toObject, includeInstance),
ambiguousFiltersList: jspb.Message.toObjectList(msg.getAmbiguousFiltersList(),
    proto.proto.api.v1.AmbiguousFilterGroup.toObject, includeInstance),
extractedTagsList: jspb.Message.toObjectList(msg.getExtractedTagsList(),
    proto.proto.api.v1.FilterTag.toObject, includeInstance),
sessionId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.NLFilterState}
 */
proto.proto.api.v1.NLFilterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.NLFilterState;
  return proto.proto.api.v1.NLFilterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.NLFilterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.NLFilterState}
 */
proto.proto.api.v1.NLFilterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_api_v1_common_pb.Filter;
      reader.readMessage(value,proto_api_v1_common_pb.Filter.deserializeBinaryFromReader);
      msg.addResolvedFilters(value);
      break;
    case 2:
      var value = new proto.proto.api.v1.AmbiguousFilterGroup;
      reader.readMessage(value,proto.proto.api.v1.AmbiguousFilterGroup.deserializeBinaryFromReader);
      msg.addAmbiguousFilters(value);
      break;
    case 3:
      var value = new proto.proto.api.v1.FilterTag;
      reader.readMessage(value,proto.proto.api.v1.FilterTag.deserializeBinaryFromReader);
      msg.addExtractedTags(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.NLFilterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.NLFilterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.NLFilterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.NLFilterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolvedFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_api_v1_common_pb.Filter.serializeBinaryToWriter
    );
  }
  f = message.getAmbiguousFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.api.v1.AmbiguousFilterGroup.serializeBinaryToWriter
    );
  }
  f = message.getExtractedTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.proto.api.v1.FilterTag.serializeBinaryToWriter
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Filter resolved_filters = 1;
 * @return {!Array<!proto.proto.api.v1.Filter>}
 */
proto.proto.api.v1.NLFilterState.prototype.getResolvedFiltersList = function() {
  return /** @type{!Array<!proto.proto.api.v1.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_api_v1_common_pb.Filter, 1));
};


/**
 * @param {!Array<!proto.proto.api.v1.Filter>} value
 * @return {!proto.proto.api.v1.NLFilterState} returns this
*/
proto.proto.api.v1.NLFilterState.prototype.setResolvedFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.api.v1.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.Filter}
 */
proto.proto.api.v1.NLFilterState.prototype.addResolvedFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.api.v1.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.NLFilterState} returns this
 */
proto.proto.api.v1.NLFilterState.prototype.clearResolvedFiltersList = function() {
  return this.setResolvedFiltersList([]);
};


/**
 * repeated AmbiguousFilterGroup ambiguous_filters = 2;
 * @return {!Array<!proto.proto.api.v1.AmbiguousFilterGroup>}
 */
proto.proto.api.v1.NLFilterState.prototype.getAmbiguousFiltersList = function() {
  return /** @type{!Array<!proto.proto.api.v1.AmbiguousFilterGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.api.v1.AmbiguousFilterGroup, 2));
};


/**
 * @param {!Array<!proto.proto.api.v1.AmbiguousFilterGroup>} value
 * @return {!proto.proto.api.v1.NLFilterState} returns this
*/
proto.proto.api.v1.NLFilterState.prototype.setAmbiguousFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.api.v1.AmbiguousFilterGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.AmbiguousFilterGroup}
 */
proto.proto.api.v1.NLFilterState.prototype.addAmbiguousFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.api.v1.AmbiguousFilterGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.NLFilterState} returns this
 */
proto.proto.api.v1.NLFilterState.prototype.clearAmbiguousFiltersList = function() {
  return this.setAmbiguousFiltersList([]);
};


/**
 * repeated FilterTag extracted_tags = 3;
 * @return {!Array<!proto.proto.api.v1.FilterTag>}
 */
proto.proto.api.v1.NLFilterState.prototype.getExtractedTagsList = function() {
  return /** @type{!Array<!proto.proto.api.v1.FilterTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.api.v1.FilterTag, 3));
};


/**
 * @param {!Array<!proto.proto.api.v1.FilterTag>} value
 * @return {!proto.proto.api.v1.NLFilterState} returns this
*/
proto.proto.api.v1.NLFilterState.prototype.setExtractedTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.proto.api.v1.FilterTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.FilterTag}
 */
proto.proto.api.v1.NLFilterState.prototype.addExtractedTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.proto.api.v1.FilterTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.NLFilterState} returns this
 */
proto.proto.api.v1.NLFilterState.prototype.clearExtractedTagsList = function() {
  return this.setExtractedTagsList([]);
};


/**
 * optional string session_id = 4;
 * @return {string}
 */
proto.proto.api.v1.NLFilterState.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.NLFilterState} returns this
 */
proto.proto.api.v1.NLFilterState.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.GetEventsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto_api_v1_common_pb.Filter.toObject, includeInstance),
pagination: (f = msg.getPagination()) && proto_api_v1_common_pb.PageRequest.toObject(includeInstance, f),
nlSessionId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventsRequest}
 */
proto.proto.api.v1.GetEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventsRequest;
  return proto.proto.api.v1.GetEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventsRequest}
 */
proto.proto.api.v1.GetEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_api_v1_common_pb.Filter;
      reader.readMessage(value,proto_api_v1_common_pb.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 2:
      var value = new proto_api_v1_common_pb.PageRequest;
      reader.readMessage(value,proto_api_v1_common_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNlSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_api_v1_common_pb.Filter.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_api_v1_common_pb.PageRequest.serializeBinaryToWriter
    );
  }
  f = message.getNlSessionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.proto.api.v1.Filter>}
 */
proto.proto.api.v1.GetEventsRequest.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.proto.api.v1.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_api_v1_common_pb.Filter, 1));
};


/**
 * @param {!Array<!proto.proto.api.v1.Filter>} value
 * @return {!proto.proto.api.v1.GetEventsRequest} returns this
*/
proto.proto.api.v1.GetEventsRequest.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.api.v1.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.Filter}
 */
proto.proto.api.v1.GetEventsRequest.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.api.v1.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.GetEventsRequest} returns this
 */
proto.proto.api.v1.GetEventsRequest.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional PageRequest pagination = 2;
 * @return {?proto.proto.api.v1.PageRequest}
 */
proto.proto.api.v1.GetEventsRequest.prototype.getPagination = function() {
  return /** @type{?proto.proto.api.v1.PageRequest} */ (
    jspb.Message.getWrapperField(this, proto_api_v1_common_pb.PageRequest, 2));
};


/**
 * @param {?proto.proto.api.v1.PageRequest|undefined} value
 * @return {!proto.proto.api.v1.GetEventsRequest} returns this
*/
proto.proto.api.v1.GetEventsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.GetEventsRequest} returns this
 */
proto.proto.api.v1.GetEventsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.GetEventsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string nl_session_id = 3;
 * @return {string}
 */
proto.proto.api.v1.GetEventsRequest.prototype.getNlSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.GetEventsRequest} returns this
 */
proto.proto.api.v1.GetEventsRequest.prototype.setNlSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.GetEventsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.proto.api.v1.Event.toObject, includeInstance),
pagination: (f = msg.getPagination()) && proto_api_v1_common_pb.PageResponse.toObject(includeInstance, f),
nlFilterState: (f = msg.getNlFilterState()) && proto.proto.api.v1.NLFilterState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventsResponse}
 */
proto.proto.api.v1.GetEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventsResponse;
  return proto.proto.api.v1.GetEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventsResponse}
 */
proto.proto.api.v1.GetEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.api.v1.Event;
      reader.readMessage(value,proto.proto.api.v1.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 2:
      var value = new proto_api_v1_common_pb.PageResponse;
      reader.readMessage(value,proto_api_v1_common_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = new proto.proto.api.v1.NLFilterState;
      reader.readMessage(value,proto.proto.api.v1.NLFilterState.deserializeBinaryFromReader);
      msg.setNlFilterState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.api.v1.Event.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_api_v1_common_pb.PageResponse.serializeBinaryToWriter
    );
  }
  f = message.getNlFilterState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.proto.api.v1.NLFilterState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event events = 1;
 * @return {!Array<!proto.proto.api.v1.Event>}
 */
proto.proto.api.v1.GetEventsResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.proto.api.v1.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.api.v1.Event, 1));
};


/**
 * @param {!Array<!proto.proto.api.v1.Event>} value
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
*/
proto.proto.api.v1.GetEventsResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.api.v1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.Event}
 */
proto.proto.api.v1.GetEventsResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.api.v1.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
 */
proto.proto.api.v1.GetEventsResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional PageResponse pagination = 2;
 * @return {?proto.proto.api.v1.PageResponse}
 */
proto.proto.api.v1.GetEventsResponse.prototype.getPagination = function() {
  return /** @type{?proto.proto.api.v1.PageResponse} */ (
    jspb.Message.getWrapperField(this, proto_api_v1_common_pb.PageResponse, 2));
};


/**
 * @param {?proto.proto.api.v1.PageResponse|undefined} value
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
*/
proto.proto.api.v1.GetEventsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
 */
proto.proto.api.v1.GetEventsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.GetEventsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NLFilterState nl_filter_state = 4;
 * @return {?proto.proto.api.v1.NLFilterState}
 */
proto.proto.api.v1.GetEventsResponse.prototype.getNlFilterState = function() {
  return /** @type{?proto.proto.api.v1.NLFilterState} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.NLFilterState, 4));
};


/**
 * @param {?proto.proto.api.v1.NLFilterState|undefined} value
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
*/
proto.proto.api.v1.GetEventsResponse.prototype.setNlFilterState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.GetEventsResponse} returns this
 */
proto.proto.api.v1.GetEventsResponse.prototype.clearNlFilterState = function() {
  return this.setNlFilterState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.GetEventsResponse.prototype.hasNlFilterState = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventByIdRequest}
 */
proto.proto.api.v1.GetEventByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventByIdRequest;
  return proto.proto.api.v1.GetEventByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventByIdRequest}
 */
proto.proto.api.v1.GetEventByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.api.v1.GetEventByIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.api.v1.GetEventByIdRequest} returns this
 */
proto.proto.api.v1.GetEventByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
event: (f = msg.getEvent()) && proto.proto.api.v1.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventByIdResponse}
 */
proto.proto.api.v1.GetEventByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventByIdResponse;
  return proto.proto.api.v1.GetEventByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventByIdResponse}
 */
proto.proto.api.v1.GetEventByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.api.v1.Event;
      reader.readMessage(value,proto.proto.api.v1.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.api.v1.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional Event event = 1;
 * @return {?proto.proto.api.v1.Event}
 */
proto.proto.api.v1.GetEventByIdResponse.prototype.getEvent = function() {
  return /** @type{?proto.proto.api.v1.Event} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.Event, 1));
};


/**
 * @param {?proto.proto.api.v1.Event|undefined} value
 * @return {!proto.proto.api.v1.GetEventByIdResponse} returns this
*/
proto.proto.api.v1.GetEventByIdResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.GetEventByIdResponse} returns this
 */
proto.proto.api.v1.GetEventByIdResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.GetEventByIdResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.GetEventMapMarkersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventMapMarkersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventMapMarkersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventMapMarkersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto_api_v1_common_pb.Filter.toObject, includeInstance),
nlSessionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventMapMarkersRequest}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventMapMarkersRequest;
  return proto.proto.api.v1.GetEventMapMarkersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventMapMarkersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventMapMarkersRequest}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_api_v1_common_pb.Filter;
      reader.readMessage(value,proto_api_v1_common_pb.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNlSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventMapMarkersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventMapMarkersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventMapMarkersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_api_v1_common_pb.Filter.serializeBinaryToWriter
    );
  }
  f = message.getNlSessionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.proto.api.v1.Filter>}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.proto.api.v1.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_api_v1_common_pb.Filter, 1));
};


/**
 * @param {!Array<!proto.proto.api.v1.Filter>} value
 * @return {!proto.proto.api.v1.GetEventMapMarkersRequest} returns this
*/
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.api.v1.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.Filter}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.api.v1.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.GetEventMapMarkersRequest} returns this
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional string nl_session_id = 2;
 * @return {string}
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.getNlSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.GetEventMapMarkersRequest} returns this
 */
proto.proto.api.v1.GetEventMapMarkersRequest.prototype.setNlSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.api.v1.GetEventMapMarkersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.GetEventMapMarkersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.GetEventMapMarkersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventMapMarkersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
markersList: jspb.Message.toObjectList(msg.getMarkersList(),
    proto.proto.api.v1.MapMarker.toObject, includeInstance),
nlFilterState: (f = msg.getNlFilterState()) && proto.proto.api.v1.NLFilterState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.GetEventMapMarkersResponse;
  return proto.proto.api.v1.GetEventMapMarkersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.GetEventMapMarkersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.api.v1.MapMarker;
      reader.readMessage(value,proto.proto.api.v1.MapMarker.deserializeBinaryFromReader);
      msg.addMarkers(value);
      break;
    case 3:
      var value = new proto.proto.api.v1.NLFilterState;
      reader.readMessage(value,proto.proto.api.v1.NLFilterState.deserializeBinaryFromReader);
      msg.setNlFilterState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.GetEventMapMarkersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.GetEventMapMarkersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.GetEventMapMarkersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarkersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.api.v1.MapMarker.serializeBinaryToWriter
    );
  }
  f = message.getNlFilterState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.proto.api.v1.NLFilterState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MapMarker markers = 1;
 * @return {!Array<!proto.proto.api.v1.MapMarker>}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.getMarkersList = function() {
  return /** @type{!Array<!proto.proto.api.v1.MapMarker>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.api.v1.MapMarker, 1));
};


/**
 * @param {!Array<!proto.proto.api.v1.MapMarker>} value
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse} returns this
*/
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.setMarkersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.api.v1.MapMarker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.api.v1.MapMarker}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.addMarkers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.api.v1.MapMarker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse} returns this
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.clearMarkersList = function() {
  return this.setMarkersList([]);
};


/**
 * optional NLFilterState nl_filter_state = 3;
 * @return {?proto.proto.api.v1.NLFilterState}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.getNlFilterState = function() {
  return /** @type{?proto.proto.api.v1.NLFilterState} */ (
    jspb.Message.getWrapperField(this, proto.proto.api.v1.NLFilterState, 3));
};


/**
 * @param {?proto.proto.api.v1.NLFilterState|undefined} value
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse} returns this
*/
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.setNlFilterState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.api.v1.GetEventMapMarkersResponse} returns this
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.clearNlFilterState = function() {
  return this.setNlFilterState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.api.v1.GetEventMapMarkersResponse.prototype.hasNlFilterState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.UpsertEventStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.UpsertEventStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.UpsertEventStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, 0),
status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.UpsertEventStateRequest}
 */
proto.proto.api.v1.UpsertEventStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.UpsertEventStateRequest;
  return proto.proto.api.v1.UpsertEventStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.UpsertEventStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.UpsertEventStateRequest}
 */
proto.proto.api.v1.UpsertEventStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.proto.api.v1.EventStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.UpsertEventStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.UpsertEventStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.UpsertEventStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.api.v1.UpsertEventStateRequest} returns this
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EventStatus status = 2;
 * @return {!proto.proto.api.v1.EventStatus}
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.getStatus = function() {
  return /** @type {!proto.proto.api.v1.EventStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.proto.api.v1.EventStatus} value
 * @return {!proto.proto.api.v1.UpsertEventStateRequest} returns this
 */
proto.proto.api.v1.UpsertEventStateRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.api.v1.UpsertEventStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.api.v1.UpsertEventStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.UpsertEventStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.api.v1.UpsertEventStateResponse}
 */
proto.proto.api.v1.UpsertEventStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.api.v1.UpsertEventStateResponse;
  return proto.proto.api.v1.UpsertEventStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.api.v1.UpsertEventStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.api.v1.UpsertEventStateResponse}
 */
proto.proto.api.v1.UpsertEventStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.api.v1.UpsertEventStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.api.v1.UpsertEventStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.api.v1.UpsertEventStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.api.v1.UpsertEventStateResponse} returns this
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.api.v1.UpsertEventStateResponse} returns this
 */
proto.proto.api.v1.UpsertEventStateResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.proto.api.v1.EventSourceType = {
  EVENT_SOURCE_TYPE_UNSPECIFIED: 0,
  EVENT_SOURCE_TYPE_LUMA: 1,
  EVENT_SOURCE_TYPE_EVENTBRITE: 2,
  EVENT_SOURCE_TYPE_CALENDAR: 3
};

/**
 * @enum {number}
 */
proto.proto.api.v1.EventKind = {
  EVENT_KIND_UNSPECIFIED: 0,
  EVENT_KIND_PRIVATE: 1,
  EVENT_KIND_PUBLIC: 2
};

/**
 * @enum {number}
 */
proto.proto.api.v1.MapMarkerKind = {
  MAP_MARKER_KIND_UNSPECIFIED: 0,
  MAP_MARKER_KIND_EVENT_ITEM: 1,
  MAP_MARKER_KIND_EVENT_GROUPED: 2
};

/**
 * @enum {number}
 */
proto.proto.api.v1.FilterTagType = {
  FILTER_TAG_TYPE_UNSPECIFIED: 0,
  FILTER_TAG_TYPE_DATE: 1,
  FILTER_TAG_TYPE_TIME: 2,
  FILTER_TAG_TYPE_LOCATION: 3,
  FILTER_TAG_TYPE_CATEGORY: 4,
  FILTER_TAG_TYPE_KEYWORD: 5
};

goog.object.extend(exports, proto.proto.api.v1);
